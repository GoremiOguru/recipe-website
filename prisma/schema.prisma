// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/lib/prisma/generated"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(uuid())
  firstName String
  lastName String
  phoneNumber Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product{
  id String @id @default(uuid())
  title String
  description String
  price Int
  discountPercentage Int?
  stock Int
  tags String[]
  rating Int
  categoryId String
  brandId String
  reviewId String[]

  Images Image[] 
  category Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  brand Brand? @relation(fields: [brandId], references: [id], onDelete: Cascade)
  reviews Review[]
}

model Image{
  id String @id @default(uuid())
  url String @unique
  productId String?

  Product Product? @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Category{
  id String @id @default(uuid())
  name String @unique
  products Product[]
  

}

model Review{
  id String @id @default(uuid())
  rating Int
  comment String?
  createdAt DateTime @default(now())
  productId String

  product Product? @relation(fields: [productId], references: [id], onDelete: Cascade)
}




model Brand{
  id String @id @default(uuid())
  name String @unique
  products Product[]

}